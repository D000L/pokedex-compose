// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        compose_version = '1.2.0-alpha06'
        kotlin_version = '1.6.10'
        hilt_version = '2.41'
        room_version = '2.4.2'
        paging_version = '3.1.1'
        accompanist_version = '0.24.5-alpha'
        retrofit_version = '2.9.0'
    }
    repositories {
        google()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:7.0.0"
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'

        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath "com.autonomousapps:dependency-analysis-gradle-plugin:1.2.1"
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: "com.autonomousapps.dependency-analysis"

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

static def excludeParentFoldersFor(project) {
    def name = ""
    def allProjects = project.getAllprojects()
    if (allProjects.size() > 1) {
        name = allProjects.first().name
    }
    return name
}

subprojects {
    switch (it.name) {
        case "pokedex":
        case "presentation":
            apply plugin: 'dagger.hilt.android.plugin'
            break
        default:
            break
    }

    switch (it.name) {
        case "pokedex":
            apply plugin: 'com.android.application'
            apply plugin: 'kotlin-android'
            apply plugin: 'kotlin-kapt'
            applyAndroidConfig(it)
            break

        case excludeParentFoldersFor(it):
            break

        default:
            //setup gradle for libraries
            apply plugin: 'com.android.library'
            apply plugin: 'kotlin-android'
            apply plugin: 'kotlin-kapt'
            applyAndroidConfig(it)
            break
    }
}

def applyAndroidConfig(project) {
    project.android {
        compileSdk 32

        defaultConfig {
            minSdk 23
            targetSdk 32

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            consumerProguardFiles "consumer-rules.pro"
        }

        buildTypes {
            release {
                minifyEnabled true
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_11
            targetCompatibility JavaVersion.VERSION_11
        }
        kotlinOptions {
            jvmTarget = '11'
            useIR = true
        }
    }
}

def applyComposeConfig(project) {
    project.android {
        buildFeatures {
            compose true
        }
        composeOptions {
            kotlinCompilerExtensionVersion compose_version
        }
    }
}

def applyComposeDependencies(project) {
    applyComposeConfig(project)
    project.dependencies {
        implementation "androidx.compose.ui:ui:$compose_version"
        implementation "androidx.compose.animation:animation:$compose_version"
        implementation "androidx.compose.material:material:$compose_version"
        implementation "androidx.compose.ui:ui-tooling:$compose_version"
        implementation "androidx.compose.runtime:runtime:$compose_version"
        implementation "androidx.compose.runtime:runtime-livedata:$compose_version"

        androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    }
}

def applyHiltDependencies(project) {
    project.dependencies {
        implementation "com.google.dagger:hilt-android:$hilt_version"
        kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    }
}

def applyRoomDependencies(project) {
    project.dependencies {
        implementation "androidx.room:room-ktx:$room_version"
        implementation "androidx.room:room-runtime:$room_version"
        kapt "androidx.room:room-compiler:$room_version"
    }
}

def applyRetrofitDependencies(project) {
    project.dependencies {
        implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
        implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

        implementation(platform("com.squareup.okhttp3:okhttp-bom:4.9.0"))
        implementation "com.squareup.okhttp3:okhttp"
        implementation "com.squareup.okhttp3:logging-interceptor"
    }
}

def applyLifecycleDependencies(project) {
    project.dependencies {
        implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'
        implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'
        implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.5.0-alpha06'
    }
}
